/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class pgbennett_speech_Speaker */

#ifndef _Included_pgbennett_speech_Speaker
#define _Included_pgbennett_speech_Speaker
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     pgbennett_speech_Speaker
 * Method:    init
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_pgbennett_speech_Speaker_init
  (JNIEnv *, jobject, jstring);

/*
 * Class:     pgbennett_speech_Speaker
 * Method:    speak
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_pgbennett_speech_Speaker_speak
  (JNIEnv *, jobject, jstring);

/*
 * Class:     pgbennett_speech_Speaker
 * Method:    setRate
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_pgbennett_speech_Speaker_setRate
  (JNIEnv *, jobject, jint);

/*
 * Class:     pgbennett_speech_Speaker
 * Method:    setVolume
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_pgbennett_speech_Speaker_setVolume
  (JNIEnv *, jobject, jint);

/*
 * Class:     pgbennett_speech_Speaker
 * Method:    close
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_pgbennett_speech_Speaker_close
  (JNIEnv *, jobject);

/*
 * Class:     pgbennett_speech_Speaker
 * Method:    setVoice
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_pgbennett_speech_Speaker_setVoice
  (JNIEnv *, jobject, jstring);

/*
 * Class:     pgbennett_speech_Speaker
 * Method:    getVoices
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_pgbennett_speech_Speaker_getVoices
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
